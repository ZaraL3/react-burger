{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport compound from '../IngredientDetails/IngredientDetails.module.css';\nimport close from '../../images/close.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  const {\n    content,\n    children\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.box,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [content, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Content;\nContent.propTypes = {\n  content: PropTypes.string,\n  children: PropTypes.number\n};\nfunction Ingredient(_ref) {\n  let {\n    image,\n    name,\n    caloris,\n    proteins,\n    fat,\n    carbohydates\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-10 ${compound.title}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: ` mb-8 text text_type_digits-large ${compound.text}`,\n        children: \" \\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        className: 'mb-15'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: ` mb-15 text text_type_main-medium ${compound.subtitle}`,\n      children: [\" \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"imag\", {\n      src: image,\n      className: \"mb-15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: compound.details,\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438, \\u043A\\u043A\\u0430\\u043B\",\n        children: [\" \", caloris]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0411\\u0435\\u043B\\u043A\\u0438,\",\n        children: [\" \", proteins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0416\\u0438\\u0440\\u044B,\",\n        children: [\" \", fat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B,\",\n        children: [\" \", carbohydates]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Ingredient;\nexport default Ingredient;\nvar _c, _c2;\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Ingredient\");","map":{"version":3,"names":["React","PropTypes","compound","close","jsxDEV","_jsxDEV","Content","content","children","props","className","box","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","number","Ingredient","_ref","image","name","caloris","proteins","fat","carbohydates","container","title","text","src","subtitle","details","_c2","$RefreshReg$"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport compound from '../IngredientDetails/IngredientDetails.module.css'\nimport close from  '../../images/close.svg'\n\n\nconst Content = () => {\n    const {content, children} = this.props;\n    return (\n        <div className={compound.box}>\n            <p>{content} </p>\n\n<span>{children}</span>\n\n        </div>\n    )\n};\n\nContent.propTypes = {\n    content: PropTypes.string,\n    children: PropTypes.number\n}\n\n\nfunction Ingredient ({image, name, caloris, proteins, fat, carbohydates}) {\n    return (\n\n        <div className={compound.container}>\n\n   \n                             \n                               \n                 <div className={`mt-10 ${compound.title}` } >\n\n                    <h1 className={` mb-8 text text_type_digits-large ${compound.text}`}> Детали ингредиентов </h1>\n                    <img src={image} className={'mb-15'}/>\n                  </div>\n                  \n                  <h1 className={` mb-15 text text_type_main-medium ${compound.subtitle}`}> {name} </h1>\n                  <imag src={image} className={\"mb-15\"}/>\n                  <div className={compound.details}>\n                    <Content content=\"Калории, ккал\"> {caloris}</Content>\n                    <Content content=\"Белки,\"> {proteins}</Content>\n                    <Content content=\"Жиры,\"> {fat}</Content>\n                    <Content content=\"Углеводы,\"> {carbohydates}</Content>\n\n                  \n                  {/* <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Калории, ккал</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Белки, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Жиры, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Углеводы, г</p> */}\n                  <Content />\n                  </div>\n                  \n\n                            \n                       \n\n            \n        </div>\n           \n    )\n\n}\n\n\n\nexport default Ingredient;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}