{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport compound from '../IngredientDetails/IngredientDetails.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  const {\n    content,\n    children\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.box,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [content, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Content;\nconst cardIngr = PropTypes.arrayOf(PropTypes.shape({\n  image_large: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  calories: PropTypes.number.isRequired,\n  proteins: PropTypes.number.isRequired,\n  fat: PropTypes.number.isRequired,\n  carbohydrates: PropTypes.number.isRequired\n}));\nfunction IngredientDetails(_ref) {\n  let {\n    image,\n    name,\n    caloris,\n    proteins,\n    fat,\n    carbohydates\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-10 ${compound.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: ` mb-15 text text_type_main-medium ${compound.subtitle}`,\n      children: [\" \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: compound.details,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mr-5 text text_type_main-default text_color_inactive ${compound.text}`,\n        children: \" \\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438, \\u043A\\u043A\\u0430\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mr-5 text text_type_main-default text_color_inactive ${compound.text}`,\n        children: \" \\u0411\\u0435\\u043B\\u043A\\u0438, \\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mr-5 text text_type_main-default text_color_inactive ${compound.text}`,\n        children: \" \\u0416\\u0438\\u0440\\u044B, \\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mr-5 text text_type_main-default text_color_inactive ${compound.text}`,\n        children: \" \\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B, \\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c2 = IngredientDetails;\nIngredientDetails.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  calories: PropTypes.number,\n  proteins: PropTypes.number,\n  fat: PropTypes.number,\n  carbohydrates: PropTypes.number\n};\nexport default IngredientDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"IngredientDetails\");","map":{"version":3,"names":["React","PropTypes","compound","jsxDEV","_jsxDEV","Content","content","children","props","className","box","fileName","_jsxFileName","lineNumber","columnNumber","_c","cardIngr","arrayOf","shape","image_large","string","isRequired","name","calories","number","proteins","fat","carbohydrates","IngredientDetails","_ref","image","caloris","carbohydates","container","title","subtitle","details","text","_c2","propTypes","$RefreshReg$"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport compound from '../IngredientDetails/IngredientDetails.module.css'\n\n\n\nconst Content = () => {\n    const {content, children} = this.props;\n    return (\n        <div className={compound.box}>\n            <p>{content} </p>\n\n<span>{children}</span>\n\n        </div>\n    )\n};\n\n\n\nconst cardIngr = PropTypes.arrayOf(PropTypes.shape(\n    {\n      \n       image_large: PropTypes.string.isRequired,\n       name: PropTypes.string.isRequired,\n       calories: PropTypes.number.isRequired,\n       proteins: PropTypes.number.isRequired,\n       fat: PropTypes.number.isRequired,\n       carbohydrates: PropTypes.number.isRequired,\n        \n    }\n  )\n  );\n\n\nfunction IngredientDetails ({image, name, caloris, proteins, fat, carbohydates}) {\n    return (\n\n        <div className={compound.container}>\n\n   \n                             \n                               \n                 <div className={`mt-10 ${compound.title}` } >\n\n                    {/* <h1 className={` mb-8 text text_type_digits-large ${compound.text}`}> Детали ингредиентов </h1> */}\n                    {/* <img src={image} className={'mb-15'}/> */}\n                  </div>\n                  \n                  <h1 className={` mb-15 text text_type_main-medium ${compound.subtitle}`}> {name} </h1>\n                  {/* <imag src={image} className={\"mb-15\"}/> */}\n                  <div className={compound.details}>\n                    {/* <Content content=\"Калории, ккал\"> {caloris}</Content>\n                    <Content content=\"Белки,\"> {proteins}</Content>\n                    <Content content=\"Жиры,\"> {fat}</Content>\n                    <Content content=\"Углеводы,\"> {carbohydates}</Content> */}\n\n                  \n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Калории, ккал</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Белки, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Жиры, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Углеводы, г</p>\n                  \n                  </div>\n                  \n\n                            \n                       \n\n            \n        </div>\n           \n    )\n\n}\n\nIngredientDetails.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    calories: PropTypes.number,\n    proteins: PropTypes.number,\n    fat: PropTypes.number,\n    carbohydrates: PropTypes.number\n  } \n\n\n\nexport default IngredientDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}