{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/App/App.jsx\";\nimport React from 'react';\nimport '../../App.css';\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\n\n// Примечание: пустой массив зависимостей [] означает, что\n// этот useEffect будет запущен один раз\n// аналогично componentDidMount()\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      hasError: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://norma.nomoreparties.space/api/ingredients\").then(res => res.json()).then(result => {\n      this.setState({\n        hasError: true,\n        items: result.data\n      });\n    }, error => {\n      this.setState({\n        hasError: true,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      hasError,\n      items\n    } = this.state;\n    if (error) {\n      return;\n      /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" ERROR \", error.massage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    } else if (!hasError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n              items: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n              items: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true);\n    }\n  }\n}\n\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"https://norma.nomoreparties.space/api/ingredients\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           setIsLoaded(true);\n//           setItems(result);\n//         },\n//         // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n//         // чтобы не перехватывать исключения из ошибок в самих компонентах.\n//         (error) => {\n//           setIsLoaded(true);\n//           setError(error);\n//         }\n//       )\n//   }, [])\n\n//   if (error) {\n//     return <div>Ошибка: {error.message}</div>;\n//   } else if (!isLoaded) {\n//     return <div>Загрузка...</div>;\n//   } else { return (\n\n//     <>\n//       <AppHeader />\n//       <div className='page'>\n//         <main className=\"section\">\n//           {/* <BurgerIngredients setModalActive={setData}/>\n//           <BurgerConstructor setModalActive={setData}/> */}\n//           <BurgerIngredients />\n//           <BurgerConstructor />\n//           {/* <OrderDetail /> */}\n//         </main>\n//         {/* <Modal active={modalActive} setActive={setModalActive}/>  */}\n//       </div>\n//     </>\n\n//   );\n// }\n// }\n\nexport default App;","map":{"version":3,"names":["React","AppHeader","BurgerIngredients","BurgerConstructor","jsxDEV","_jsxDEV","Fragment","_Fragment","App","Component","constructor","props","state","error","hasError","items","componentDidMount","fetch","then","res","json","result","setState","data","render","children","massage","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/App/App.jsx"],"sourcesContent":["import React from 'react';\nimport '../../App.css'\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\n\n\n\n\n\n  // Примечание: пустой массив зависимостей [] означает, что\n  // этот useEffect будет запущен один раз\n  // аналогично componentDidMount()\n  \n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      error: null,\n      hasError: false,\n      items: []\n  }\n  };\n\n  componentDidMount() {\n      fetch(\"https://norma.nomoreparties.space/api/ingredients\")\n      .then(res => res.json())\n      .then (\n          (result)=> {\n              this.setState(\n                  {\n                      hasError: true,\n                      items: result.data\n                  }\n              );\n          }, \n          (error) => {\n              this.setState(\n                  {\n                      hasError: true,\n                      error\n                  }\n              );\n          }\n      )\n  }\n  render(){\n      const {error, hasError, items} = this.state;\n      if(error) {\n          return \n          <p> ERROR {error.massage}</p>\n      } else if (!hasError) {\n          return <p> Loading... </p>\n      } else {\n          return (\n              \n                <>\n                      <AppHeader />\n                       <div className='page'>\n                         <main className=\"section\">\n                           {/* <BurgerIngredients setModalActive={setData}/>\n                           <BurgerConstructor setModalActive={setData}/> */}\n                           <BurgerIngredients items={data}/>\n                           <BurgerConstructor items={data} />\n                           {/* <OrderDetail /> */}\n                         </main>\n                         {/* <Modal active={modalActive} setActive={setModalActive}/>  */}\n                       </div>\n                     </>\n             \n          )\n      }\n  }\n}\n\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"https://norma.nomoreparties.space/api/ingredients\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           setIsLoaded(true);\n//           setItems(result);\n//         },\n//         // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n//         // чтобы не перехватывать исключения из ошибок в самих компонентах.\n//         (error) => {\n//           setIsLoaded(true);\n//           setError(error);\n//         }\n//       )\n//   }, [])\n\n//   if (error) {\n//     return <div>Ошибка: {error.message}</div>;\n//   } else if (!isLoaded) {\n//     return <div>Загрузка...</div>;\n//   } else { return (\n\n//     <>\n//       <AppHeader />\n//       <div className='page'>\n//         <main className=\"section\">\n//           {/* <BurgerIngredients setModalActive={setData}/>\n//           <BurgerConstructor setModalActive={setData}/> */}\n//           <BurgerIngredients />\n//           <BurgerConstructor />\n//           {/* <OrderDetail /> */}\n//         </main>\n//         {/* <Modal active={modalActive} setActive={setModalActive}/>  */}\n//       </div>\n//     </>\n    \n//   );\n// }\n// }\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,iBAAiB,MAAM,wCAAwC;;AAMpE;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKF,MAAMC,GAAG,SAASR,KAAK,CAACS,SAAS,CAAC;EAEhCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE;IACX,CAAC;EACD;EAEAC,iBAAiBA,CAAA,EAAG;IAChBC,KAAK,CAAC,mDAAmD,CAAC,CACzDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CACAG,MAAM,IAAI;MACP,IAAI,CAACC,QAAQ,CACT;QACIR,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAEM,MAAM,CAACE;MAClB,CAAC,CACJ;IACL,CAAC,EACAV,KAAK,IAAK;MACP,IAAI,CAACS,QAAQ,CACT;QACIR,QAAQ,EAAE,IAAI;QACdD;MACJ,CAAC,CACJ;IACL,CAAC,CACJ;EACL;EACAW,MAAMA,CAAA,EAAE;IACJ,MAAM;MAACX,KAAK;MAAEC,QAAQ;MAAEC;IAAK,CAAC,GAAG,IAAI,CAACH,KAAK;IAC3C,IAAGC,KAAK,EAAE;MACN;MACA,aAAAR,OAAA;QAAAoB,QAAA,GAAG,SAAO,EAACZ,KAAK,CAACa,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IACjC,CAAC,MAAM,IAAI,CAAChB,QAAQ,EAAE;MAClB,oBAAOT,OAAA;QAAAoB,QAAA,EAAG;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAC9B,CAAC,MAAM;MACH,oBAEMzB,OAAA,CAAAE,SAAA;QAAAkB,QAAA,gBACMpB,OAAA,CAACJ,SAAS;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACZzB,OAAA;UAAK0B,SAAS,EAAC,MAAM;UAAAN,QAAA,eACnBpB,OAAA;YAAM0B,SAAS,EAAC,SAAS;YAAAN,QAAA,gBAGvBpB,OAAA,CAACH,iBAAiB;cAACa,KAAK,EAAEQ;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAE,eACjCzB,OAAA,CAACF,iBAAiB;cAACY,KAAK,EAAEQ;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAE7B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEH;MAAA,gBACL;IAGlB;EACJ;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAetB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}