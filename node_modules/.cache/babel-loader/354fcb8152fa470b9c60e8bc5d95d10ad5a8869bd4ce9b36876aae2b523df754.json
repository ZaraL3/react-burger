{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/App/App.jsx\";\nimport React from 'react';\nimport '../../App.css';\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Api = 'https://norma.nomoreparties.space/api/ingredients ';\n\n// const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n\n//   // Примечание: пустой массив зависимостей [] означает, что\n//   // этот useEffect будет запущен один раз\n//   // аналогично componentDidMount()\n//   useEffect(() => {\n//     fetch(\"https://norma.nomoreparties.space/api/ingredients\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           setIsLoaded(true);\n//           setItems(result);\n//         },\n//         // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n//         // чтобы не перехватывать исключения из ошибок в самих компонентах.\n//         (error) => {\n//           setIsLoaded(true);\n//           setError(error);\n//         }\n//       )\n//   }, [])\n\n//   if (error) {\n//     return <div>Ошибка: {error.message}</div>;\n//   } else if (!isLoaded) {\n//     return <div>Загрузка...</div>;\n//   } else {\n//     return (\n//       <ul>\n//         {items.map(item => (\n//           <li key={item.id}>\n//             {item.name} {item.price}\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AppHeader","BurgerIngredients","BurgerConstructor","jsxDEV","_jsxDEV","Fragment","_Fragment","Api","App","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/App/App.jsx"],"sourcesContent":["import React from 'react';\nimport '../../App.css'\nimport AppHeader from '../AppHeader/AppHeader';\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\n\n\nconst Api='https://norma.nomoreparties.space/api/ingredients '\n\n// const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n\n//   // Примечание: пустой массив зависимостей [] означает, что\n//   // этот useEffect будет запущен один раз\n//   // аналогично componentDidMount()\n//   useEffect(() => {\n//     fetch(\"https://norma.nomoreparties.space/api/ingredients\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           setIsLoaded(true);\n//           setItems(result);\n//         },\n//         // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n//         // чтобы не перехватывать исключения из ошибок в самих компонентах.\n//         (error) => {\n//           setIsLoaded(true);\n//           setError(error);\n//         }\n//       )\n//   }, [])\n\n//   if (error) {\n//     return <div>Ошибка: {error.message}</div>;\n//   } else if (!isLoaded) {\n//     return <div>Загрузка...</div>;\n//   } else {\n//     return (\n//       <ul>\n//         {items.map(item => (\n//           <li key={item.id}>\n//             {item.name} {item.price}\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n\n\nfunction App() {\n\n  return (\n\n    <>\n      <AppHeader />\n      <div className='page'>\n        <main className=\"section\">\n          {/* <BurgerIngredients setModalActive={setData}/>\n          <BurgerConstructor setModalActive={setData}/> */}\n          <BurgerIngredients />\n          <BurgerConstructor />\n          {/* <OrderDetail /> */}\n        </main>\n        {/* <Modal active={modalActive} setActive={setModalActive}/>  */}\n      </div>\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,iBAAiB,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGvE,MAAMC,GAAG,GAAC,oDAAoD;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,GAAGA,CAAA,EAAG;EAEb,oBAEEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA,CAACJ,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACbT,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAL,QAAA,eACnBL,OAAA;QAAMU,SAAS,EAAC,SAAS;QAAAL,QAAA,gBAGvBL,OAAA,CAACH,iBAAiB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACrBT,OAAA,CAACF,iBAAiB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEhB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEH;EAAA,gBACL;AAGP;AAACE,EAAA,GAnBQP,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}