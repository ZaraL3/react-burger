{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport compound from '../IngredientDetails/IngredientDetails.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = props => {\n  const {\n    content,\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.box,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Content;\nfunction IngredientDetails(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-10 ${compound.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: ` mb-15 text text_type_main-medium ${compound.subtitle}`,\n      children: [\" \", cardIngr.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"imag\", {\n      src: cardIngr.image_large,\n      className: \"mb-15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: compound.details,\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438, \\u043A\\u043A\\u0430\\u043B\",\n        children: [\" \", cardIngr.caloris]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0411\\u0435\\u043B\\u043A\\u0438,\",\n        children: [\" \", cardIngr.proteins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0416\\u0438\\u0440\\u044B,\",\n        children: [\" \", cardIngr.fat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B,\",\n        children: [\" \", cardIngr.carbohydates]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c2 = IngredientDetails;\nIngredientDetails.propTypes = {\n  cardIngr: PropTypes.shape({\n    image_large: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    calories: PropTypes.number.isRequired,\n    proteins: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    carbohydrates: PropTypes.number.isRequired\n  })\n};\nexport default IngredientDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"IngredientDetails\");","map":{"version":3,"names":["React","PropTypes","compound","jsxDEV","_jsxDEV","Content","props","content","children","className","box","fileName","_jsxFileName","lineNumber","columnNumber","_c","IngredientDetails","container","title","subtitle","cardIngr","name","src","image_large","details","caloris","proteins","fat","carbohydates","_c2","propTypes","shape","string","isRequired","calories","number","carbohydrates","$RefreshReg$"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport compound from '../IngredientDetails/IngredientDetails.module.css'\n\n\n\nconst Content = (props) => {\n    const {content, children} = props;\n    return (\n        <div className={compound.box}>\n            <p>{content}</p>\n            <span>{children}</span>\n\n        </div>\n    )\n};\n\n\n\n\n\nfunction IngredientDetails(props) {\n    \n    return (\n\n        <div className={compound.container}>\n\n   \n                             \n                               \n                 <div className={`mt-10 ${compound.title}` } >\n\n                    {/* <h1 className={` mb-8 text text_type_digits-large ${compound.text}`}> Детали ингредиентов </h1> */}\n                    {/* <img src={image} className={'mb-15'}/> */}\n                  </div>\n                  \n                  <h1 className={` mb-15 text text_type_main-medium ${compound.subtitle}`}> {cardIngr.name} </h1>\n                  <imag src={cardIngr.image_large} className={\"mb-15\"}/>\n                  <div className={compound.details}>\n                    <Content content=\"Калории, ккал\"> {cardIngr.caloris}</Content>\n                    <Content content=\"Белки,\"> {cardIngr.proteins}</Content>\n                    <Content content=\"Жиры,\"> {cardIngr.fat}</Content>\n                    <Content content=\"Углеводы,\"> {cardIngr.carbohydates}</Content>\n\n{/*                   \n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Калории, ккал</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Белки, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Жиры, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Углеводы, г</p> */}\n                  \n                  </div>\n                  \n\n                            \n                       \n\n            \n        </div>\n           \n    )\n\n}\n\nIngredientDetails.propTypes = {\ncardIngr: PropTypes.shape(\n    {\n       image_large: PropTypes.string.isRequired,\n       name: PropTypes.string.isRequired,\n       calories: PropTypes.number.isRequired,\n       proteins: PropTypes.number.isRequired,\n       fat: PropTypes.number.isRequired,\n       carbohydrates: PropTypes.number.isRequired,\n        \n    }\n  )\n  \n\n};\n\nexport default IngredientDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}