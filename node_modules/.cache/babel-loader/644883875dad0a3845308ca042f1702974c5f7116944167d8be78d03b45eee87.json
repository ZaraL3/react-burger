{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/Modal/Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport stile from '../Modal/Modal.module.css';\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"../ModalOverlay/ModalOverlay\";\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n// const appRoot = document.getElementById('app-root');\n// const modalRoot = document.getElementById('modal-root');\n\n// function Modal({children, setIsOpen}) {\n\n//     const keydownHandler = ({ key }) => {\n//         const el = document.createElement('div');\n//         switch (key) {\n//           case 'Escape':\n//             close();\n//             break;\n//            default:\n//         }\n//       };\n\n//       React.useEffect(() => {\n//         document.addEventListener('keydown', keydownHandler);\n//         return () => document.removeEventListener('keydown', keydownHandler);\n//       });\n\n//     const close = React.useCallback(() => {\n//         setIsOpen({\n//             isShow: false,\n//             title: null,\n//             content: null,\n//         }) \n//     },[]);\n\n//     return ReactDOM.createPortal((\n//         <>\n//         {/* <div className={`modal ${children ? \"open\" : \"\"}`}>  */}\n//         <div className={`${stile.modal1} ${children ? stile.open : ''}`}>\n\n//         <div className={stile.close} onClick={close}> \n//         <CloseIcon type=\"primary\"/>\n//         </div>\n\n//         </div>\n//         {el}\n//         {/* <button className=\"close\" onClick={() => setIsOpen(false)} >\n//             <CloseIcon type=\"primary\"/>\n//        </button> */}\n\n//         {/* </div> */}\n//         {/* <div> \n//             {children}\n//         </div> */}\n//         <ModalOverlay close={close} />\n\n//       </>  ), modalRoot\n//     )\n//     // document.querySelector('#react-modals')\n// }\n\n// const root = ReactDOM.createRoot(appRoot);\n// root.render(<Modal/>);\n// export default Modal;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Modal(_ref) {\n  _s();\n  let {\n    children,\n    isOpen,\n    handleClose\n  } = _ref;\n  const modalRoot = document.getElementById('modal');\n  useEffect(() => {\n    const closeOnEscapeKey = e => e.key === \"Escape\" ? handleClose() : null;\n    document.body.addEventListener(\"keydown\", closeOnEscapeKey);\n    return () => {\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKey);\n    };\n  }, [handleClose]);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${stile.modal1}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stile.close,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          type: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true)), modalRoot;\n}\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\n;\nModal.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","ReactDOM","stile","CloseIcon","ModalOverlay","useEffect","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","_ref","_s","children","isOpen","handleClose","modalRoot","document","getElementById","closeOnEscapeKey","e","key","body","addEventListener","removeEventListener","createPortal","className","modal1","fileName","_jsxFileName","lineNumber","columnNumber","close","onClick","type","onClose","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/Modal/Modal.jsx"],"sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport stile from '../Modal/Modal.module.css'\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"../ModalOverlay/ModalOverlay\";\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types'\n\n// const appRoot = document.getElementById('app-root');\n// const modalRoot = document.getElementById('modal-root');\n\n\n// function Modal({children, setIsOpen}) {\n\n\n//     const keydownHandler = ({ key }) => {\n//         const el = document.createElement('div');\n//         switch (key) {\n//           case 'Escape':\n//             close();\n//             break;\n//            default:\n//         }\n//       };\n\n//       React.useEffect(() => {\n//         document.addEventListener('keydown', keydownHandler);\n//         return () => document.removeEventListener('keydown', keydownHandler);\n//       });\n\n//     const close = React.useCallback(() => {\n//         setIsOpen({\n//             isShow: false,\n//             title: null,\n//             content: null,\n//         }) \n//     },[]);\n\n\n//     return ReactDOM.createPortal((\n//         <>\n//         {/* <div className={`modal ${children ? \"open\" : \"\"}`}>  */}\n//         <div className={`${stile.modal1} ${children ? stile.open : ''}`}>\n\n\n//         <div className={stile.close} onClick={close}> \n//         <CloseIcon type=\"primary\"/>\n//         </div>\n\n//         </div>\n//         {el}\n//         {/* <button className=\"close\" onClick={() => setIsOpen(false)} >\n//             <CloseIcon type=\"primary\"/>\n//        </button> */}\n\n\n//         {/* </div> */}\n//         {/* <div> \n//             {children}\n//         </div> */}\n//         <ModalOverlay close={close} />\n\n//       </>  ), modalRoot\n//     )\n//     // document.querySelector('#react-modals')\n// }\n\n// const root = ReactDOM.createRoot(appRoot);\n// root.render(<Modal/>);\n// export default Modal;\n\nfunction Modal({ children, isOpen, handleClose }) {\n    const modalRoot = document.getElementById('modal');\n    useEffect(() => {\n        const closeOnEscapeKey = e => e.key === \"Escape\" ? handleClose() : null;\n        document.body.addEventListener(\"keydown\", closeOnEscapeKey);\n        return () => {\n            document.body.removeEventListener(\"keydown\", closeOnEscapeKey);\n        };\n    }, [handleClose]);\n\n\n\n    return (\n        ReactDOM.createPortal(\n            <>\n                <div className={`${stile.modal1}`}>\n                    <h1> hello</h1>\n\n\n                    <div className={stile.close} onClick={handleClose}>\n                        <CloseIcon type=\"primary\" />\n                    </div>\n\n                </div>\n                <ModalOverlay onClose={handleClose} />\n                <div> \n                    {children}\n                </div>\n\n            </>\n        ), modalRoot\n\n\n\n    );\n};\n\nModal.propTypes = {\n    children: PropTypes.node.isRequired,\n}\nexport default Modal;\n\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,SAAS,QAAQ,oDAAoD;AAC9E,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,KAAKA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAAnC;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EAC5C,MAAMK,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;EAClDd,SAAS,CAAC,MAAM;IACZ,MAAMe,gBAAgB,GAAGC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAK,QAAQ,GAAGN,WAAW,EAAE,GAAG,IAAI;IACvEE,QAAQ,CAACK,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,gBAAgB,CAAC;IAC3D,OAAO,MAAM;MACTF,QAAQ,CAACK,IAAI,CAACE,mBAAmB,CAAC,SAAS,EAAEL,gBAAgB,CAAC;IAClE,CAAC;EACL,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAIjB,OACI,aAAAf,QAAQ,CAACyB,YAAY,eACjBlB,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACIN,OAAA;MAAKmB,SAAS,EAAG,GAAEzB,KAAK,CAAC0B,MAAO,EAAE;MAAAd,QAAA,gBAC9BN,OAAA;QAAAM,QAAA,EAAI;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAGfxB,OAAA;QAAKmB,SAAS,EAAEzB,KAAK,CAAC+B,KAAM;QAACC,OAAO,EAAElB,WAAY;QAAAF,QAAA,eAC9CN,OAAA,CAACL,SAAS;UAACgC,IAAI,EAAC;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ,eACNxB,OAAA,CAACJ,YAAY;MAACgC,OAAO,EAAEpB;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtCxB,OAAA;MAAAM,QAAA,EACKA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAAA,gBAEP,CACN,EAAEf,SAAS;AAKpB;AAACJ,EAAA,CAnCQF,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAmCb;AAEDA,KAAK,CAAC2B,SAAS,GAAG;EACdxB,QAAQ,EAAER,SAAS,CAACiC,IAAI,CAACC;AAC7B,CAAC;AACD,eAAe7B,KAAK;AAAC,IAAA0B,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}