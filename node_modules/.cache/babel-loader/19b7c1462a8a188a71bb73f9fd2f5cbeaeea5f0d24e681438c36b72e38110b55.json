{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport compound from '../IngredientDetails/IngredientDetails.module.css';\nimport { cardIngr } from \"../../utils/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = props => {\n  const {\n    content,\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.box,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = Content;\nfunction IngredientDetails(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compound.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-10 ${compound.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: ` mb-15 text text_type_main-medium ${compound.subtitle}`,\n      children: [\" \", props.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"imag\", {\n      src: props.image_large,\n      className: \"mb-15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: compound.details,\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438, \\u043A\\u043A\\u0430\\u043B\",\n        children: [\" \", props.caloris]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0411\\u0435\\u043B\\u043A\\u0438,\",\n        children: [\" \", props.proteins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0416\\u0438\\u0440\\u044B,\",\n        children: [\" \", props.fat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        content: \"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B,\",\n        children: [\" \", props.carbohydates]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c2 = IngredientDetails;\nIngredientDetails.propTypes = {\n  image: PropTypes.string,\n  calories: PropTypes.number,\n  carbohydrates: PropTypes.number,\n  fats: PropTypes.number,\n  name: PropTypes.string,\n  proteins: PropTypes.number\n};\nexport default IngredientDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"IngredientDetails\");","map":{"version":3,"names":["React","PropTypes","compound","cardIngr","jsxDEV","_jsxDEV","Content","props","content","children","className","box","fileName","_jsxFileName","lineNumber","columnNumber","_c","IngredientDetails","container","title","subtitle","name","src","image_large","details","caloris","proteins","fat","carbohydates","_c2","propTypes","image","string","calories","number","carbohydrates","fats","$RefreshReg$"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/IngredientDetails/IngredientDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport compound from '../IngredientDetails/IngredientDetails.module.css'\nimport { cardIngr } from \"../../utils/data\";\n\n\n\nconst Content = (props) => {\n    const {content, children} = props;\n    return (\n        <div className={compound.box}>\n            <p>{content}</p>\n            <span>{children}</span>\n\n        </div>\n    )\n};\n\n\n\n\n\n\nfunction IngredientDetails (props) {\n    \n    return (\n\n        <div className={compound.container}>\n\n   \n                             \n                               \n                 <div className={`mt-10 ${compound.title}` } >\n\n                    {/* <h1 className={` mb-8 text text_type_digits-large ${compound.text}`}> Детали ингредиентов </h1> */}\n                    {/* <img src={image} className={'mb-15'}/> */}\n                  </div>\n                  \n                  <h1 className={` mb-15 text text_type_main-medium ${compound.subtitle}`}> {props.name} </h1>\n                  <imag src={props.image_large} className={\"mb-15\"}/>\n                  <div className={compound.details}>\n                    <Content content=\"Калории, ккал\"> {props.caloris}</Content>\n                    <Content content=\"Белки,\"> {props.proteins}</Content>\n                    <Content content=\"Жиры,\"> {props.fat}</Content>\n                    <Content content=\"Углеводы,\"> {props.carbohydates}</Content>\n\n{/*                   \n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Калории, ккал</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Белки, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Жиры, г</p>\n                  <p className={`mr-5 text text_type_main-default text_color_inactive ${compound.text}`}> Углеводы, г</p> */}\n                  \n                  </div>\n                  \n\n                            \n                       \n\n            \n        </div>\n           \n    )\n\n}\n\nIngredientDetails.propTypes = {\n    image: PropTypes.string,\n    calories: PropTypes.number,\n    carbohydrates: PropTypes.number,\n    fats: PropTypes.number,\n    name: PropTypes.string,\n    proteins: PropTypes.number,\n  \n\n};\n\nexport default IngredientDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}