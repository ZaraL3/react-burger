{"ast":null,"code":"var _jsxFileName = \"/Users/lenuraarabskaa/react/react-burger/src/components/ModalOverlay/ModalOverlay.jsx\";\nimport React from \"react\";\nimport '../ModalOverlay/ModalOverlay.module.css';\n\n// function ModalOverlay({isOpen, setIsOpen}) {\n//     return(\n\n//         <div className={`overlay ${isOpen ? \"open\" : \"\"}`} onClick={() => setIsOpen(false)}> \n//         {isOpen}\n//         </div>\n\n//     )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalOverlay(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    onClick: props.isOpen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = ModalOverlay;\nexport default ModalOverlay;\nvar _c;\n$RefreshReg$(_c, \"ModalOverlay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ModalOverlay","props","className","onClick","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lenuraarabskaa/react/react-burger/src/components/ModalOverlay/ModalOverlay.jsx"],"sourcesContent":["import React from \"react\";\nimport '../ModalOverlay/ModalOverlay.module.css'\n\n\n// function ModalOverlay({isOpen, setIsOpen}) {\n//     return(\n        \n//         <div className={`overlay ${isOpen ? \"open\" : \"\"}`} onClick={() => setIsOpen(false)}> \n//         {isOpen}\n//         </div>\n\n//     )\n// }\nfunction ModalOverlay(props) {\n    return(\n        \n        <div className=\"overlay\" onClick={props.isOpen}> \n        \n        </div>\n\n    )\n}\n\n\nexport default ModalOverlay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yCAAyC;;AAGhD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EACzB,oBAEIF,OAAA;IAAKG,SAAS,EAAC,SAAS;IAACC,OAAO,EAAEF,KAAK,CAACG;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEzC;AAGd;AAACC,EAAA,GARQT,YAAY;AAWrB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}